# –ö–æ—Ä–æ—á–µ –Ω–∞ —Ñ–ª–∞—Å–∫/—Ñ–∞—Å—Ç–∞–ø–∏(–≤ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ)
# –•—Ä–∞–Ω–∏—Ç—å –≤—Å–µ –≤ –æ–±—ã—á–Ω–æ–º —Å–ø–∏—Å–∫–µ
# 4 –º–µ—Ç–æ–¥–∞
# /govno GET
# –û—Ç–¥–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π —ç–º–æ–¥–∑–∏ –∫–∞–∫–∞—à–∫–∏ —Å—Ç—Ä–æ–∫–æ–π. –ß—Ç–æ–±—ã –±—ã–ª–æ –∫–∞–∫ –º–∏–Ω–∏–º—É–º 3 –≤–∞—Ä–∏–∞–Ω—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
# /govno/<id> GET
# –ò–∑ —Å—Å—ã–ª–∫–∏ –∑–∞–±—Ä–∞—Ç—å id, –æ—Ç–¥–∞—Ç—å –∫–∞–∫–∞—à–∫—É —Å —Å–æ–æ—Ç–≤–µ—Å—Ç–≤—É—é—â–∏–º –ø–æ—Ä—è–¥–∫–æ–≤—ã–º –Ω–æ–º–µ—Ä–æ–º. –ï—Å–ª–∏ —Ç–∞–∫–æ–≥–æ id –Ω–µ—Ç(–≤—ã—à–µ–ª –∑–∞ –ø—Ä–µ–¥–µ–ª—ã) - –æ—Ç–¥–∞—Ç—å 404 –∫–æ–¥
# /govno/<id> PUT
# –ó–∞–º–µ–Ω—è–µ—Ç —ç–º–æ–¥–∑–∏ –∫–∞–∫–∞—à–∫–∏ —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º –ø–æ—Ä—è–¥–∫–æ–≤—ã–º –Ω–æ–º–µ—Ä–æ–º –Ω–∞ –ø—Ä–∏—Å–ª–∞–Ω–Ω–æ–µ. –ï—Å–ª–∏ id –≤—ã—à–µ–ª  –∑–∞ –≥—Ä–∞–Ω–∏—Ü—ã - 404. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ –∑–∞—Å–ª–∞–ª–∏ –∏–º–µ–Ω–Ω–æ —ç–º–æ–¥–∑–∏, –µ—Å–ª–∏ –Ω–µ—Ç - 400 –æ—à–∏–±–∫–∞ –æ—Ç–¥–∞–µ—Ç—Å—è
# /govno POST
# –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —ç–º–æ–¥–∑–∏ –∏ –∫–ª–∞–¥–µ—Ç –µ–≥–æ –≤ —Å–ø–∏—Å–æ–∫. –ï—Å–ª–∏ —Ç–∞–∫–æ–π —É–∂–µ –µ—Å—Ç—å - –æ—Ç–¥–∞–µ—Ç 409 –∫–æ–¥ –æ—à–∏–±–∫–∏

# üêØ üê∞ üê± üê≤ üê≥ üê¥ üêµ üê∂ üê∑
import random
from flask import Flask, jsonify, request
from emoji import is_emoji

app = Flask(__name__)

govno_emojis = ['üí©', 'ü§¢', 'ü§Æ']


@app.route('/govno', methods=['GET'])
def get_random_govno():
    return jsonify(random.choice(govno_emojis))


@app.route('/govno/<int:id>', methods=['GET'])
def get_govno_by_id(id):
    if id < 0 or id >= len(govno_emojis):
        return jsonify({'error': 'Not found'}, 404)
    return jsonify(govno_emojis[id])


@app.route('/govno/<int:id>', methods=['PUT'])
def update_govno_by_id(id:int):
    if id < 0 or id >= len(govno_emojis):
        return jsonify({'error': 'Not found'}), 404
    new_emoji = request.json.get('emoji')
    if not new_emoji or len(new_emoji) != 1:
        return jsonify({'error': 'Bad request'}), 400
    govno_emojis[id] = new_emoji
    return jsonify(govno_emojis[id])


@app.route('/govno', methods=['POST'])
def add_govno():
    new_emoji = request.json.get('emoji')
    if not new_emoji or len(new_emoji) != 1:
        return jsonify({'error': 'Bad request'}), 400
    if not is_emoji(new_emoji):
        return jsonify({'error': 'Not emoji'}), 400
    if new_emoji in govno_emojis:
        return jsonify({'error': 'Dublicate'}), 409
    govno_emojis.append(new_emoji)
    return jsonify(new_emoji), 201

@app.route('/govno/<int:id>', methods=['DELETE'])
def delete(id):
    if id < 0 or id >= len(govno_emojis):
        return jsonify({'error': 'Not found'}), 404
    deleted_emoji = govno_emojis.pop(id)
    return jsonify({'message': 'Emoji deleted', 'deleted_emoji': deleted_emoji}),200

if __name__ == '__main__':
    app.run(debug=True)
